#!groovy

@Library("Infrastructure")

def type = "nodejs"
def product = "idam"
def component = "hmcts-access"

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   envVariable: envVar
  ]
}

def secrets = [
  'idam-idam-${env}': [
    secret('launchdarkly-sdk-key', 'LAUNCHDARKLY_SDK_KEY'),
  ]
]

withPipeline(type, product, component) {
  loadVaultSecrets(secrets)
  disableLegacyDeployment()

  after('build') {
    yarnBuilder.yarn('rebuild puppeteer')
    yarnBuilder.yarn('build')
  }

  after('test') {
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "coverage/lcov-report",
      reportFiles          : "index.html",
      reportName           : "Code Coverage Report"
    ]

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "test-output/unit",
      reportFiles          : "test-report.html",
      reportName           : "Unit Test Report"
    ]
  }

  after('smoketest:idam-preview') {
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "test-output/smoke",
      reportFiles          : "test-report.html",
      reportName           : "Smoke Test Report"
    ]
  }

  after('smoketest:idam-aat') {
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "test-output/smoke",
      reportFiles          : "test-report.html",
      reportName           : "Smoke Test Report"
    ]
  }

  after('functionalTest:idam-preview') {
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "functional-output/functional/allure",
      reportFiles          : "index.html",
      reportName           : "Functional Test Report"
    ]

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "test-output/accessibility",
      reportFiles          : "test-report.html",
      reportName           : "Accessibility Test Report"
    ]
  }

  after('functionalTest:idam-aat') {
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "functional-output/functional/allure",
      reportFiles          : "index.html",
      reportName           : "Functional Test Report"
    ]

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "test-output/accessibility",
      reportFiles          : "test-report.html",
      reportName           : "Accessibility Test Report"
    ]
  }
}
